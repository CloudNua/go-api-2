{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample CRUD HTTP service.",
        "title": "CloudNua: Comment Service",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/v1/comment",
    "paths": {
        "/comments": {
            "get": {
                "description": "get comments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "List Comments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Comment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError400"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError404"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError405"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError408"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError500"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError503"
                        }
                    },
                    "505": {
                        "description": "HTTP Version Not Supported",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError505"
                        }
                    }
                }
            },
            "post": {
                "description": "add by json comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Add a comment",
                "parameters": [
                    {
                        "description": "Add comment",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddCommentRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError400"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError404"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError405"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError408"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError500"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError503"
                        }
                    },
                    "505": {
                        "description": "HTTP Version Not Supported",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError505"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httputil.HTTPError400": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "httputil.HTTPError404": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status not found"
                }
            }
        },
        "httputil.HTTPError405": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "message": {
                    "type": "string",
                    "example": "status method not allowed"
                }
            }
        },
        "httputil.HTTPError408": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 408
                },
                "message": {
                    "type": "string",
                    "example": "status request timeout"
                }
            }
        },
        "httputil.HTTPError500": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "message": {
                    "type": "string",
                    "example": "status internal server error"
                }
            }
        },
        "httputil.HTTPError503": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 503
                },
                "message": {
                    "type": "string",
                    "example": "status service unavailable"
                }
            }
        },
        "httputil.HTTPError505": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 505
                },
                "message": {
                    "type": "string",
                    "example": "status HTTP version not supported"
                }
            }
        },
        "models.AddCommentRequestBody": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Comment": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model        // adds ID, Title, Author \u0026 Slug",
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}